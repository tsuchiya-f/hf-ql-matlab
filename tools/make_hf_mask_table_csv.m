% ----------------------------------------------------------------------------------------------
% How to use
% >> csv_file_in = '../data/mask/kasaba_mask_table/hf_sid3_mask.csv';
% >> make_hf_mask_table_csv(csv_file_in);
% -------------------------------------
function [err] = make_hf_mask_table_csv(file_in)

% frequency range for mask table  (definition: DO NOT CHANGE)
%------------------------------------------------------------
f_start = 80.0;     % [kHz]
f_end   = 44924.0;  % [kHz]
df      = 2.3125;   % band width [kHz]
%------------------------------------------------------------
% table size
nf = (f_end-f_start)/df;    % [bits]
n_ent = nf/8;               % [Bytes]

freq_s_def = f_start + (0:nf-1)*df;
freq_e_def = f_start + (1:nf)*df;

[file_path,~,~] = fileparts(file_in);

% mask table (log output)
filename = append(file_path,'/freq_mask_table_def.txt');
fid = fopen(filename,'w');
fprintf(fid,"   start[kHz] stop[kHz]\n");
for i=1:nf
    fprintf(fid, "%3d  %8.2f  %8.2f\n", i, freq_s_def(i), freq_e_def(i));
end
fclose(fid);

% output file name
file_out=append(file_path,"/HF_Table_Mask.t");
fprintf("%s\n",file_out);

% Read csv file (frequency mask table)
A = readmatrix(file_in);
index = A(:,1);
sta_freq = A(:,2);
end_freq = A(:,3);
mask_val = A(:,4);

% check input file
err = 0;
if numel(index) ~= nf
    fprintf("Invalid number of mask table\n");
    err = 1;
    return;
end
for i=1:nf
    if sta_freq(i) ~= freq_s_def(i)
        fprintf("Invalid value in start freqneucy\n");
        fprintf("%d %f %f\n", i, sta_freq(i),freq_s_def(i));
        err = 2;
        break;
    end
end
for i=1:nf
    if end_freq(i) ~= freq_e_def(i)
        fprintf("Invalid value in stop freqneucy\n");
        fprintf("%d %f %f\n", i, end_freq(i),freq_e_def(i));
        err = err + 4;
        break;
    end
end
if err ~= 0
    return;
end

% init table
mask = zeros(1,n_ent);

% generate table
% frequency masked [kHz]
for i_freq=1:nf
    i_ent = fix((i_freq-1)/8)+1;
    i_bin = mod((i_freq-1),8);
    if mask_val(i_freq) ~= 0
        mask_ptn = 2^(7-i_bin);
    else
        mask_ptn = 0;
    end
    mask(i_ent) = bitor(mask(i_ent), mask_ptn);

%    if i_ent < 4
%        fprintf("%d %d %d %d 0x%02x\n", i_freq, mask_freq(i_freq), i_ent, i_bin, mask(i_ent));
%    end
end

% output table
fid = fopen(file_out,'w');

fprintf(fid, "// --------------------------------------------------\n");
fprintf(fid, "// Soure file : %s\n", file_in);    
fprintf(fid, "// --------------------------------------------------\n");
fprintf(fid, "// This table is generated by make_hf_mask_table_csv.m\n");
fprintf(fid, "//  number of entry : %d\n",n_ent);
fprintf(fid, "//  start frequeny [kHz] : %f\n",f_start);
fprintf(fid, "//  stop  frequeny [kHz] : %f\n",f_end);
fprintf(fid, "//  bandwidth [kHz]      : %d\n",df);
fprintf(fid, "// -------------------------------------------------\n");
fprintf(fid, "\n");
fprintf(fid, "const unsigned char hfTableMask[HF_TABLE_MASK_ENT] = {\n");
for i=1:n_ent
    mask_out = 255 - mask(i); 
    fprintf(fid, " 0x%02x",mask_out);
    if i ~= n_ent
        fprintf(fid, ",");        
    end
    if mod(i,16) == 0
        fprintf(fid, "\n");
    end
end
fprintf(fid, "};\n");

fclose(fid);

end


